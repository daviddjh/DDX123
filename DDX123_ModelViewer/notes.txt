1/23/2023

Todo:
1. Copy over code from DavidDx12_2 for controls (WASD - Movement, Right Mouse + Drag - Rotate)
2. Implement Lighting! ( Problably something simple at first, first big goal being PBR with IBL )

Figured out a way to handle the transparent pixels in a texture. I just "discarded" the pixel if it's
alpha was less than 1. I guess this means it's depth was not written to the depth buffer because the
primitives behind it started appering. This is not the best solution, but it will work for now!

1/22/2023

Meshes now have a single vertex and a single index buffer. They have an array of draw calls that track
the vertex and index offsets to use when making the d3d12 draw call.

Got a blending state set up for alpha to work properly, now dont know what to do about the z depth for
alpha blended pixels. Depending on draw order, primitives at an alpha pixel could get depth compared out,
so nothing is drawn behind the alpha pixel anymore.

12/23/2022

Sponza is rendering correctly with textures! Had to flip texture coordinate back to default for sponza to 
be viewed correctly.

Todo:
1. Consider adding some sort of camera controls to validate rest of the sponza model is loaded properly
2. Clean up code before adding anything else. Getting a bit out of hand..

12/23/2022

Slowly getting there! Got sponza loaded with textures showing on a few objects infront of the cameras.
Textures on the fabric looks heavily aliased, need mip mapping.
Decoupled Materials from primitive_groups. Primative groups now store the index of the material they need.

Todo:
1. Fix matricies so model moving works
2. Consider adding some sort of camera controls to validate rest of the sponza model is loaded properly
3. Clean up code before adding anything else. Getting a bit out of hand..

12/5/2022

- Still working on sponza model load. The verticies, indicies, and textures are taking up a lot of room.
- Just giving each primitive_group it's own buffers and draw call, will need to optimize in the future.
- In the future will need to rewrite upload buffer code to support more buffers and clean up after upload.
- Seems like there is a problem with resource cleanup on the GPU, as the program fails to create a resource
    when not attached to RemedyBG.
    - Should add a "cleanup" function to model to cleanup the models resources. See if that works.
- Also, since I added these model data structures, I should clean up the global vars for vertex buffer, albedo texture, etc..

12/4/2022

- Currently working to improve model load code with the goal of Sponza being able to load properly

11/25/2022

- Loads the DamagedHelmet GLtf model and albedo texture.

TODO:
1. Clean up model / model load code, move to own file?
2. Add Model Matricies and other code to move models.
3. Add default scaling, controls, lighting

NOTES:

Alignment is important!! Texture wasn't diplaying properly because the destination location in the CopyTextureRegion function
wasn't aligned properly.

11/25/2022

- Made progress on screen resize and the moving screen causing freeze bug. Fixed by moving render out of windows message loop
- Added gltf file loader. Currently only works with files that have vertex color defined per vertex.
    - Moved to DrawIndexedInstanced by defalut

TODO:
1. Add texture to model load.
2. Clean up model / model load code, move to own file?
3. Add default scaling, controls, lighting

NOTES:

Due to the combination of backside culling and DirectX + opengl z axis being swapped, at first, the models weren't being shown.
It was only after I had added code to the model load that flipped the z axis that the models began to show. Originally, the z axis
of the cube was flipped, thus after the combination of Z buffer depth culling(?), and backside culling, nothing ended up on the render target.

11/15/2022

Started on window resize and move

TODO: Limit Screen resize, scale framebuffer to fullscreen??

11/15/2022

Added Dear ImGui Shutdown

TODO: Handle screen resize

11/14/2022

Got ImGui working!
Added avg FPS and frame MS.
Added IO handling for ImGui.

TODO: Shutdown ImGui. Check Refcount dx12 objects.

D_Renderer::render:
    Average Time Taken: 10.7ms
    Median Time Taken:  9.2ms

11/1/2022

Goal: Build a Model Viewer app that can load the Sponza Scene, as well as others

Results:
- Load scene dynamicaly when user enters scene path
- Responsibly manage resources for each loaded scene
- ImGui for GUI
- Camera to move around scene. uses keyboard and mouse controls
- option to make fullscreen